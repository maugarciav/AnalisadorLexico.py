import re



def split_cadenas(line):
  numeros_reales_pattern = r'[-]?[\.]?\d+[.]?\d*[(e|E)]?[-]?\d*'
  variables_pattern = r'[A-Za-z][\w]*'
  comment_patern= r'//.*'
  operadores_pattern  = r'[=*+-/^()]'
  
  list = re.findall(numeros_reales_pattern + "|" + variables_pattern + "|" + comment_patern + "|" + operadores_pattern,line) 

#   print(list)
  for token in list:
    lexerAritmetico(token)


def lexerAritmetico(tokens):
#    print(tokens)
   
   patern= r'.*'
   estados_aceptacion = {1,2,3,7,8,10,11,12,13,14,15,16,17}


   d = [
        {'a': 8, 'b': 8, 'c': 8, 'd': 8, 'e': 8, 'f': 8, 'g': 8, 'h': 8, 'i': 8, 'j': 8, 'k': 8, 'l': 8, 'm': 8, 'n': 8, 'o': 8, 'p': 8, 'q': 8, 'r': 8, 's': 8, 't': 8, 'u': 8, 'v': 8, 'w': 8, 'x': 8, 'y': 8, 'z': 8, 'A': 8, 'B': 8, 'C': 8, 'D': 8, 'E': 8, 'F': 8, 'G': 8, 'H': 8, 'I': 8, 'J': 8, 'K': 8, 'L': 8, 'M': 8, 'N': 8, 'O': 8, 'P': 8, 'Q': 8, 'R': 8, 'S': 8, 'T': 8, 'U': 8, 'V': 8, 'W': 8, 'X': 8, 'Y': 8, 'Z': 8, '_': 9, '0': 1, '1': 1, '2': 1, '3': 1, '4': 1, '5': 1, '6': 1, '7': 1, '8': 1, '9': 1, '.': 6, '-': 7, '=': 10, '+': 11, '*': 12, '/': 13, '^': 14, '(': 15, ')': 16, ' ':9},
        
        {'a': 9, 'b': 9, 'c': 9, 'd': 9, 'e': 9, 'f': 9, 'g': 9, 'h': 9, 'i': 9, 'j': 9, 'k': 9, 'l': 9, 'm': 9, 'n': 9, 'o': 9, 'p': 9, 'q': 9, 'r': 9, 's': 9, 't': 9, 'u': 9, 'v': 9, 'w': 9, 'x': 9, 'y': 9, 'z': 9, 'A': 9, 'B': 9, 'C': 9, 'D': 9, 'E': 9, 'F': 9, 'G': 9, 'H': 9, 'I': 9, 'J': 9, 'K': 9, 'L': 9, 'M': 9, 'N': 9, 'O': 9, 'P': 9, 'Q': 9, 'R': 9, 'S': 9, 'T': 9, 'U': 9, 'V': 9, 'W': 9, 'X': 9, 'Y': 9, 'Z': 9, '_' : 9, '0':1, '1':1, '2':1, '3':1, '4':1, '5':1, '6':1, '7':1, '8':1, '9':1, '.' : 2, '-' : 9, '=': 10, '+' : 11, '*' : 12, '/' : 13, '^':  14, '(' : 15, ')':16,' ':9},
       
        {'a': 9, 'b': 9, 'c': 9, 'd': 9, 'e': 4, 'f': 9, 'g': 9, 'h': 9, 'i': 9, 'j': 9, 'k': 9, 'l': 9, 'm': 9, 'n': 9, 'o': 9, 'p': 9, 'q': 9, 'r': 9, 's': 9, 't': 9, 'u': 9, 'v': 9, 'w': 9, 'x': 9, 'y': 9, 'z': 9, 'A': 9, 'B': 9, 'C': 9, 'D': 9, 'E': 4, 'F': 9, 'G': 9, 'H': 9, 'I': 9, 'J': 9, 'K': 9, 'L': 9, 'M': 9, 'N': 9, 'O': 9, 'P': 9, 'Q': 9, 'R': 9, 'S': 9, 'T': 9, 'U': 9, 'V': 9, 'W': 9, 'X': 9, 'Y': 9, 'Z': 9, '_' : 9, '0':2, '1':2, '2':2, '3':2, '4':2, '5':2, '6':2, '7':2, '8':2, '9':2, '.' : 9, '-' : 9, '=': 10, '+' : 11, '*' : 12, '/' : 13, '^':  14, '(' : 15, ')':16, ' ':9},

        {'a': 9, 'b': 9, 'c': 9, 'd': 9, 'e': 9, 'f': 9, 'g': 9, 'h': 9, 'i': 9, 'j': 9, 'k': 9, 'l': 9, 'm': 9, 'n': 9, 'o': 9, 'p': 9, 'q': 9, 'r': 9, 's': 9, 't': 9, 'u': 9, 'v': 9, 'w': 9, 'x': 9, 'y': 9, 'z': 9, 'A': 9, 'B': 9, 'C': 9, 'D': 9, 'E': 9, 'F': 9, 'G': 9, 'H': 9, 'I': 9, 'J': 9, 'K': 9, 'L': 9, 'M': 9, 'N': 9, 'O': 9, 'P': 9, 'Q': 9, 'R': 9, 'S': 9, 'T': 9, 'U': 9, 'V': 9, 'W': 9, 'X': 9, 'Y': 9, 'Z': 9, '_' : 9, '0':3, '1':3, '2':3, '3':3, '4':3, '5':3, '6':3, '7':3, '8':3, '9':3, '.' : 9, '-' : 9, '=': 10, '+' : 11, '*' : 12, '/' : 13, '^':  14, '(': 15, ')':16, ' ':9},
        
        {'a': 9, 'b': 9, 'c': 9, 'd': 9, 'e': 9, 'f': 9, 'g': 9, 'h': 9, 'i': 9, 'j': 9, 'k': 9, 'l': 9, 'm': 9, 'n': 9, 'o': 9, 'p': 9, 'q': 9, 'r': 9, 's': 9, 't': 9, 'u': 9, 'v': 9, 'w': 9, 'x': 9, 'y': 9, 'z': 9, 'A': 9, 'B': 9, 'C': 9, 'D': 9, 'E': 9, 'F': 9, 'G': 9, 'H': 9, 'I': 9, 'J': 9, 'K': 9, 'L': 9, 'M': 9, 'N': 9, 'O': 9, 'P': 9, 'Q': 9, 'R': 9, 'S': 9, 'T': 9, 'U': 9, 'V': 9, 'W': 9, 'X': 9, 'Y': 9, 'Z': 9, '_': 9, '0': 3, '1': 3, '2': 3, '3': 3, '4': 3, '5': 3, '6': 3, '7': 3, '8': 3, '9': 3, '.': 9, '-': 5, '=': 9, '+': 9, '*': 9, '/': 9, '^': 9, '(': 9, ')': 9, ' ':9},

        {'a': 9, 'b': 9, 'c': 9, 'd': 9, 'e': 9, 'f': 9, 'g': 9, 'h': 9, 'i': 9, 'j': 9, 'k': 9, 'l': 9, 'm': 9, 'n': 9, 'o': 9, 'p': 9, 'q': 9, 'r': 9, 's': 9, 't': 9, 'u': 9, 'v': 9, 'w': 9, 'x': 9, 'y': 9, 'z': 9, 'A': 9, 'B': 9, 'C': 9, 'D': 9, 'E': 9, 'F': 9, 'G': 9, 'H': 9, 'I': 9, 'J': 9, 'K': 9, 'L': 9, 'M': 9, 'N': 9, 'O': 9, 'P': 9, 'Q': 9, 'R': 9, 'S': 9, 'T': 9, 'U': 9, 'V': 9, 'W': 9, 'X': 9, 'Y': 9, 'Z': 9, '_' : 9, '0':3, '1':3, '2':3, '3':3, '4':3, '5':3, '6':3, '7':3, '8':3, '9':3, '.' : 9, '-' : 9, '=': 9, '+' : 9, '*' : 9, '/' : 9, '^':  9, '(' : 9, ')':9, ' ':9},

        {'a': 9, 'b': 9, 'c': 9, 'd': 9, 'e': 9, 'f': 9, 'g': 9, 'h': 9, 'i': 9, 'j': 9, 'k': 9, 'l': 9, 'm': 9, 'n': 9, 'o': 9, 'p': 9, 'q': 9, 'r': 9, 's': 9, 't': 9, 'u': 9, 'v': 9, 'w': 9, 'x': 9, 'y': 9, 'z': 9, 'A': 9, 'B': 9, 'C': 9, 'D': 9, 'E': 9, 'F': 9, 'G': 9, 'H': 9, 'I': 9, 'J': 9, 'K': 9, 'L': 9, 'M': 9, 'N': 9, 'O': 9, 'P': 9, 'Q': 9, 'R': 9, 'S': 9, 'T': 9, 'U': 9, 'V': 9, 'W': 9, 'X': 9, 'Y': 9, 'Z': 9, '_' : 9, '0':2, '1':2, '2':2, '3':2, '4':2, '5':2, '6':2, '7':2, '8':2, '9':2, '.' : 9, '-' : 9, '=': 9, '+' : 9, '*' : 9, '/' : 9, '^':  9, '(' : 9, ')':9, ' ':9},

        {'a': 9, 'b': 9, 'c': 9, 'd': 9, 'e': 9, 'f': 9, 'g': 9, 'h': 9, 'i': 9, 'j': 9, 'k': 9, 'l': 9, 'm': 9, 'n': 9, 'o': 9, 'p': 9, 'q': 9, 'r': 9, 's': 9, 't': 9, 'u': 9, 'v': 9, 'w': 9, 'x': 9, 'y': 9, 'z': 9, 'A': 9, 'B': 9, 'C': 9, 'D': 9, 'E': 9, 'F': 9, 'G': 9, 'H': 9, 'I': 9, 'J': 9, 'K': 9, 'L': 9, 'M': 9, 'N': 9, 'O': 9, 'P': 9, 'Q': 9, 'R': 9, 'S': 9, 'T': 9, 'U': 9, 'V': 9, 'W': 9, 'X': 9, 'Y': 9, 'Z': 9, '_' : 9, '0':1, '1':1, '2':1, '3':1, '4':1, '5':1, '6':1, '7':1, '8':1, '9':1, '.' : 6, '-' : 9, '=': 9, '+' : 9, '*' : 9, '/' : 9, '^':  9, '(' : 9, ')':9, ' ':7},

        {'a': 8, 'b': 8, 'c': 8, 'd': 8, 'e': 8, 'f': 8, 'g': 8, 'h': 8, 'i': 8, 'j': 8, 'k': 8, 'l': 8, 'm': 8, 'n': 8, 'o': 8, 'p': 8, 'q': 8, 'r': 8, 's': 8, 't': 8, 'u': 8, 'v': 8, 'w': 8, 'x': 8, 'y': 8, 'z': 8, 'A': 8, 'B': 8, 'C': 8, 'D': 8, 'E': 8, 'F': 8, 'G': 8, 'H': 8, 'I': 8, 'J': 8, 'K': 8, 'L': 8, 'M': 8, 'N': 8, 'O': 8, 'P': 8, 'Q': 8, 'R': 8, 'S': 8, 'T': 8, 'U': 8, 'V': 8, 'W': 8, 'X': 8, 'Y': 8, 'Z': 8, '_' : 8, '0':8, '1':8, '2':8, '3':8, '4':8, '5':8, '6':8, '7':8, '8':8, '9':8, '.' : 9, '-' : 9, '=': 10, '+' : 11, '*' : 12, '/' : 13, '^':  14, '(' : 15, ')':16, ' ':9},
        
        {'a': 9, 'b': 9, 'c': 9, 'd': 9, 'e': 9, 'f': 9, 'g': 9, 'h': 9, 'i': 9, 'j': 9, 'k': 9, 'l': 9, 'm': 9, 'n': 9, 'o': 9, 'p': 9, 'q': 9, 'r': 9, 's': 9, 't': 9, 'u': 9, 'v': 9, 'w': 9, 'x': 9, 'y': 9, 'z': 9, 'A': 9, 'B': 9, 'C': 9, 'D': 9, 'E': 9, 'F': 9, 'G': 9, 'H': 9, 'I': 9, 'J': 9, 'K': 9, 'L': 9, 'M': 9, 'N': 9, 'O': 9, 'P': 9, 'Q': 9, 'R': 9, 'S': 9, 'T': 9, 'U': 9, 'V': 9, 'W': 9, 'X': 9, 'Y': 9, 'Z': 9, '_' : 9, '0':9, '1':9, '2':9, '3':9, '4':9, '5':9, '6':9, '7':9, '8':9, '9':9, '.' : 9, '-' : 9, '=': 9, '+' : 9, '*' : 9, '/' : 9, '^':  9, '(' : 9, ')':9, ' ':9},

        {'a': 8, 'b': 8, 'c': 8, 'd': 8, 'e': 8, 'f': 8, 'g': 8, 'h': 8, 'i': 8, 'j': 8, 'k': 8, 'l': 8, 'm': 8, 'n': 8, 'o': 8, 'p': 8, 'q': 8, 'r': 8, 's': 8, 't': 8, 'u': 8, 'v': 8, 'w': 8, 'x': 8, 'y': 8, 'z': 8, 'A': 8, 'B': 8, 'C': 8, 'D': 8, 'E': 8, 'F': 8, 'G': 8, 'H': 8, 'I': 8, 'J': 8, 'K': 8, 'L': 8, 'M': 8, 'N': 8, 'O': 8, 'P': 8, 'Q': 8, 'R': 8, 'S': 8, 'T': 8, 'U': 8, 'V': 8, 'W': 8, 'X': 8, 'Y': 8, 'Z': 8, '_' : 9, '0':1, '1':1, '2':1, '3':1, '4':1, '5':1, '6':1, '7':1, '8':1, '9':1, '.' : 6, '-' : 7, '=': 10, '+' : 11, '*' : 12, '/' : 13, '^':  14, '(' : 15, ')':16, ' ':9},

        {'a': 8, 'b': 8, 'c': 8, 'd': 8, 'e': 8, 'f': 8, 'g': 8, 'h': 8, 'i': 8, 'j': 8, 'k': 8, 'l': 8, 'm': 8, 'n': 8, 'o': 8, 'p': 8, 'q': 8, 'r': 8, 's': 8, 't': 8, 'u': 8, 'v': 8, 'w': 8, 'x': 8, 'y': 8, 'z': 8, 'A': 8, 'B': 8, 'C': 8, 'D': 8, 'E': 8, 'F': 8, 'G': 8, 'H': 8, 'I': 8, 'J': 8, 'K': 8, 'L': 8, 'M': 8, 'N': 8, 'O': 8, 'P': 8, 'Q': 8, 'R': 8, 'S': 8, 'T': 8, 'U': 8, 'V': 8, 'W': 8, 'X': 8, 'Y': 8, 'Z': 8, '_' : 9, '0':1, '1':1, '2':1, '3':1, '4':1, '5':1, '6':1, '7':1, '8':1, '9':1, '.' : 6, '-' : 7, '=': 10, '+' : 11, '*' : 12, '/' : 13, '^':  14, '(' : 15, ')':16, ' ':9},

        {'a': 8, 'b': 8, 'c': 8, 'd': 8, 'e': 8, 'f': 8, 'g': 8, 'h': 8, 'i': 8, 'j': 8, 'k': 8, 'l': 8, 'm': 8, 'n': 8, 'o': 8, 'p': 8, 'q': 8, 'r': 8, 's': 8, 't': 8, 'u': 8, 'v': 8, 'w': 8, 'x': 8, 'y': 8, 'z': 8, 'A': 8, 'B': 8, 'C': 8, 'D': 8, 'E': 8, 'F': 8, 'G': 8, 'H': 8, 'I': 8, 'J': 8, 'K': 8, 'L': 8, 'M': 8, 'N': 8, 'O': 8, 'P': 8, 'Q': 8, 'R': 8, 'S': 8, 'T': 8, 'U': 8, 'V': 8, 'W': 8, 'X': 8, 'Y': 8, 'Z': 8, '_' : 9, '0':1, '1':1, '2':1, '3':1, '4':1, '5':1, '6':1, '7':1, '8':1, '9':1, '.' : 6, '-' : 7, '=': 10, '+' : 11, '*' : 12, '/' : 13, '^':  14, '(' : 15, ')':16, ' ':9},

        {'a': 8, 'b': 8, 'c': 8, 'd': 8, 'e': 8, 'f': 8, 'g': 8, 'h': 8, 'i': 8, 'j': 8, 'k': 8, 'l': 8, 'm': 8, 'n': 8, 'o': 8, 'p': 8, 'q': 8, 'r': 8, 's': 8, 't': 8, 'u': 8, 'v': 8, 'w': 8, 'x': 8, 'y': 8, 'z': 8, 'A': 8, 'B': 8, 'C': 8, 'D': 8, 'E': 8, 'F': 8, 'G': 8, 'H': 8, 'I': 8, 'J': 8, 'K': 8, 'L': 8, 'M': 8, 'N': 8, 'O': 8, 'P': 8, 'Q': 8, 'R': 8, 'S': 8, 'T': 8, 'U': 8, 'V': 8, 'W': 8, 'X': 8, 'Y': 8, 'Z': 8, '_' : 9, '0':1, '1':1, '2':1, '3':1, '4':1, '5':1, '6':1, '7':1, '8':1, '9':1, '.' : 6, '-' : 7, '=': 10, '+' : 11, '*' : 12, '/' : 17, '^':  14, '(' : 15, ')':16, ' ':9},

        {'a': 8, 'b': 8, 'c': 8, 'd': 8, 'e': 8, 'f': 8, 'g': 8, 'h': 8, 'i': 8, 'j': 8, 'k': 8, 'l': 8, 'm': 8, 'n': 8, 'o': 8, 'p': 8, 'q': 8, 'r': 8, 's': 8, 't': 8, 'u': 8, 'v': 8, 'w': 8, 'x': 8, 'y': 8, 'z': 8, 'A': 8, 'B': 8, 'C': 8, 'D': 8, 'E': 8, 'F': 8, 'G': 8, 'H': 8, 'I': 8, 'J': 8, 'K': 8, 'L': 8, 'M': 8, 'N': 8, 'O': 8, 'P': 8, 'Q': 8, 'R': 8, 'S': 8, 'T': 8, 'U': 8, 'V': 8, 'W': 8, 'X': 8, 'Y': 8, 'Z': 8, '_' : 9, '0':1, '1':1, '2':1, '3':1, '4':1, '5':1, '6':1, '7':1, '8':1, '9':1, '.' : 6, '-' : 7, '=': 10, '+' : 11, '*' : 12, '/' : 13, '^':  14, '(' : 15, ')':16, ' ':9},

        {'a': 8, 'b': 8, 'c': 8, 'd': 8, 'e': 8, 'f': 8, 'g': 8, 'h': 8, 'i': 8, 'j': 8, 'k': 8, 'l': 8, 'm': 8, 'n': 8, 'o': 8, 'p': 8, 'q': 8, 'r': 8, 's': 8, 't': 8, 'u': 8, 'v': 8, 'w': 8, 'x': 8, 'y': 8, 'z': 8, 'A': 8, 'B': 8, 'C': 8, 'D': 8, 'E': 8, 'F': 8, 'G': 8, 'H': 8, 'I': 8, 'J': 8, 'K': 8, 'L': 8, 'M': 8, 'N': 8, 'O': 8, 'P': 8, 'Q': 8, 'R': 8, 'S': 8, 'T': 8, 'U': 8, 'V': 8, 'W': 8, 'X': 8, 'Y': 8, 'Z': 8, '_' : 9, '0':1, '1':1, '2':1, '3':1, '4':1, '5':1, '6':1, '7':1, '8':1, '9':1, '.' : 6, '-' : 7, '=': 10, '+' : 11,'*' : 12, '/' : 13, '^':  14, '(' : 15, ')':16, ' ':9},

        {'a': 8, 'b': 8, 'c': 8, 'd': 8, 'e': 8, 'f': 8, 'g': 8, 'h': 8, 'i': 8, 'j': 8, 'k': 8, 'l': 8, 'm': 8, 'n': 8, 'o': 8, 'p': 8, 'q': 8, 'r': 8, 's': 8, 't': 8, 'u': 8, 'v': 8, 'w': 8, 'x': 8, 'y': 8, 'z': 8, 'A': 8, 'B': 8, 'C': 8, 'D': 8, 'E': 8, 'F': 8, 'G': 8, 'H': 8, 'I': 8, 'J': 8, 'K': 8, 'L': 8, 'M': 8, 'N': 8, 'O': 8, 'P': 8, 'Q': 8, 'R': 8, 'S': 8, 'T': 8, 'U': 8, 'V': 8, 'W': 8, 'X': 8, 'Y': 8, 'Z': 8, '_' : 9, '0':1, '1':1, '2':1, '3':1, '4':1, '5':1, '6':1, '7':1, '8':1, '9':1, '.' : 6, '-' : 7, '=': 10, '+' : 11, '*' : 12, '/' : 13, '^':  14, '(' : 15, ')':16, ' ':9},

        {'a': 17, 'b': 17, 'c': 17, 'd': 17, 'e': 17, 'f': 17, 'g': 17, 'h': 17, 'i': 17, 'j': 17, 'k': 17, 'l': 17, 'm': 17, 'n': 17, 'o': 17, 'p': 17, 'q': 17, 'r': 17, 's': 17, 't': 17, 'u': 17, 'v': 17, 'w': 17, 'x': 17, 'y': 17, 'z': 17, 'A': 17, 'B': 17, 'C': 17, 'D': 17, 'E': 17, 'F': 17, 'G': 17, 'H': 17, 'I': 17, 'J': 17, 'K': 17, 'L': 17, 'M': 17, 'N': 17, 'O': 17, 'P': 17, 'Q': 17, 'R': 17, 'S': 17, 'T': 17, 'U': 17, 'V': 17, 'W': 17, 'X': 17, 'Y': 17, 'Z': 17, '_' : 17, '0':1, '1':1, '2':1, '3':1, '4':1, '5':1, '6':1, '7':1, '8':1, '9':1, '.' : 17, '-' : 17, '=': 17, '+' : 17, '*' : 17, '/' : 17, '^': 17, '(': 17, ')':17, ' ':17}
        ]



   p_token = ""
   estado = 0

   
   for token in tokens:
      estado = d[estado][token]
      p_token += token

   
   if estado == 1:
      print(p_token,"              Entero")
      return True
   if estado == 2:
      print(p_token,"              Real")
      return True
   if estado == 3:
      print(p_token,"              Real")
      return True
   if estado == 7:
      print(p_token,"              Resta")
      return True
   if estado == 8:
      print(p_token,"              Variable")
      return True
   if estado == 10:
      print(p_token,"              Asignacion")
      return True
   if estado == 11:
      print(p_token,"              Suma")
      return True
   if estado == 12:
      print(p_token,"              Multiplicacion")
      return True
   if estado == 13:
      print(p_token,"              Division")
      return True
   if estado == 14:
      print(p_token,"              Potencia")
      return True
   if estado == 15:
      print(p_token,"              Paréntesis que abre")
      return True
   if estado == 16:
      print(p_token,"              Paréntesis que cierra")
      return True
   if estado == 17:
      print(p_token,"              Comentario")
      return True
   else:
      print("El token: ", p_token, " no fue reconocido: ")
      return False
   


   

with open ("example.txt") as file:
    print("Token     |      Tipo") 
    print()
    for line in file:
        split_cadenas(line)